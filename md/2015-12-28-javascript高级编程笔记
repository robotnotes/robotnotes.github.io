js
======

## Cookies
大多浏览器有4K的cookies大小限制，超过默认无声丢弃，如果user credentials 存储在cookies里，注意这个大小

用BOM对象 `document.cookie` 来操作和读取，表现形式为
**URL encoded key = URL encoded value**;
使用`document.cookie`来设置cookie的时候，不会覆盖cookie，除非设置的cookie的名字已经存在，格式如同
`name=value; expires=EXPIRATION_TIME; path=DOMAIN_PATH; domain=DOMAIN_NAME; secure`
最好给name和value编码一下

```javascript
document.cookie = encodeURLComponent("name") + "=" +
                  encodeURLComponent("测试")
```


## Web存取
1. Storage 类型(方法：`clear(), getItem(name), key(index), removeItem(name), setItem(name,value))` 只能存取字符串
1. sessionStorage 会话数据，只保存到浏览器关闭。
1. globalStorage 可以跨会话存储数据，但要指定DOMAIN

    ```javascript
    globalStorage['wrox.com'].name = "test" 
    var name = globalStorage['wrox.com'].name
    ```
    这样所有wrox.com和其子域都可以访问，如果用的是非顶级域名，则只能在指定域下访问。
1. localStorage 也就是自动加了域名的 globalStorage

任何对Storage的修改，都会在`document`上触发`storage`事件

2.5M的大小限制

## IndexedDB
所有的操作都是异步的，需要覆写指定的回调函数
大致用法

```javascript
var request,  database

request = indexedDB.open("DBNAME")
request.onerror = function(event) {
	alert('error');
}
request.onsuccess = function(event) {
	database = event.target.result;
}
```
setVersion() 设置版本号（一般`if (database.version != 1.0)`') 这样的办法先测试一次有没有设置过版本，若没有，调用 setVersion

#### 创建数据

```
var store = db.createObjectStore("NAME", {keyPath: "KEY_NAME"})
```

可以认为Store就是表，keyPath是键名（全局唯一）

```
request = store.add(XXX)

request.onerror = function()
{
	// handle errors
}

request.onsuccess = function() {
	//handle success
}
```

#### 事务

```
var transaction = database.transaction()
```

没有参数的时候只能通过事务来读取数据库保存的对象

```
var transaction = database.transaction("STORE_OBJECT_NAME"
```

这样保证只加载 STORE_OBJECT_NAME 存储空间的数据。

```
var transaction = database.transaction(["users", "blogs"])
```

也可以这样访问多个

如果要加其他权限，如写，需要传入第二个参数

```
var transaction = database.transaction("users", window.IDBTransaction || window.webkitIDBTransaction)
```

这样挂载的是读写

取得了事务的索引后，用`objectStore()`方法传入存储空间名称，可以访问特定的存储空间。就可以用 `add(), put(), get(), delete(), clear()`等方法，用法同上。

事务的事件处理程序

```
transaction.onerror -> 整个事务被取消了
transaction.oncomplete -> 整个事务成功完成 
```

事务游标

```
cursor = store.openCursor()
```
